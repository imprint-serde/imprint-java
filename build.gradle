plugins {
    id 'java-library'
    id 'maven-publish'
    id 'me.champeau.jmh' version '0.7.2'
}

group = 'com.imprint'
version = '0.1.0-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenCentral()
}

dependencies {
    // Lombok for reducing boilerplate
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Test dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    
    // Lombok for tests
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
    
    // Performance testing with JMH
    jmhImplementation 'org.openjdk.jmh:jmh-core:1.37'
    jmhAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
    
    // Competitor libraries for benchmarking
    jmhImplementation 'com.google.protobuf:protobuf-java:3.25.1'
    jmhImplementation 'org.apache.avro:avro:1.11.3'
    jmhImplementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0'
    jmhImplementation 'com.google.flatbuffers:flatbuffers-java:23.5.26'
    jmhImplementation 'com.esotericsoftware:kryo:5.4.0'
}

test {
    useJUnitPlatform()
    
    // Enable detailed test output
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// JMH configuration
jmh {
    fork = 1
    warmupIterations = 3
    iterations = 3
    resultFormat = 'JSON'
    includeTests = false
}

compileJava {
    options.compilerArgs << '-Xlint:unchecked'
    options.deprecation = true
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
    // Don't fail build on missing javadoc
    options.addStringOption('Xdoclint:none', '-quiet')
}
